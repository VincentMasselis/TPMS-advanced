import com.masselis.tpmsadvanced.data.record.model.Pressure;
import com.masselis.tpmsadvanced.data.record.model.Temperature;
import com.masselis.tpmsadvanced.data.record.model.SensorLocation;
import kotlin.Boolean;
import kotlin.Int;
import kotlin.UShort;

CREATE TABLE Tyre(
    id INTEGER AS Int NOT NULL,
    timestamp REAL NOT NULL,
    location INTEGER AS SensorLocation NOT NULL,
    pressure REAL AS Pressure NOT NULL,
    temperature REAL AS Temperature NOT NULL,
    battery INTEGER AS UShort NOT NULL,
    isAlarm INTEGER AS Boolean NOT NULL,
    sensorId INTEGER AS Int NOT NULL,
    FOREIGN KEY(sensorId) REFERENCES Sensor(id) ON DELETE CASCADE
);

insert:
INSERT INTO Tyre (id, timestamp, location, pressure, temperature, battery, isAlarm, sensorId) VALUES (?, ?, ?, ?, ?, ?, ?, ?);

selectByTyreLocationByCar:
SELECT Tyre.id, Tyre.timestamp, Tyre.pressure, Tyre.temperature, Tyre.battery, Tyre.isAlarm FROM Tyre
INNER JOIN Sensor ON Tyre.sensorId = Sensor.id
INNER JOIN Car ON Sensor.carId = Car.uuid
WHERE Sensor.location = ? AND Car.uuid = ?;